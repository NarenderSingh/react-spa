{"version":3,"sources":["Firebase.js","Home.js","Welcome.js","Navigation.js","FormError.js","Login.js","MeetingList.js","Meeting.js","Register.js","CheckIn.js","AttendeesList.js","Attendees.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","GoogleAuthProvider","Home","user","this","props","className","href","to","Component","Welcome","userName","logOutUser","onClick","e","Navigation","FormError","message","Login","state","email","password","errorMessage","handleChange","bind","handleSubmit","itemName","target","name","itemValue","value","setState","register","signInWithEmailAndPassword","then","navigate","catch","preventDefault","onSubmit","htmlFor","required","type","id","placeholder","onChange","MeetingList","deleteMeetings","meetingID","database","ref","userID","remove","myMeetings","meetings","map","item","key","role","title","meetingName","Meeting","addMeeting","aria-describedby","length","Register","displayName","passOne","passTwo","createUserWithEmailAndPassword","registerUser","CheckIn","push","attendeeName","attendeeEmail","star","AttendeesList","deleteAttendee","attendeeID","adminUser","toggleStar","undefined","set","admin","myAttendees","attendees","Attandees","displayAttendees","allAttendees","searchQuery","on","snapshot","val","attendeesList","randomAttendee","Math","floor","random","resetQuery","filteredAttendees","filter","toLowerCase","match","chooseRandom","App","signOut","uid","howManyMeetings","onAuthStateChanged","FBUser","snaphot","meetingsList","updateProfile","path","Attendees","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f35d75f.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDQdmJdT4PRZIFj4Q_JxekWjNageKOm0Eo\",\r\n  authDomain: \"react-spa-project.firebaseapp.com\",\r\n  databaseURL: \"https://react-spa-project.firebaseio.com\",\r\n  projectId: \"react-spa-project\",\r\n  storageBucket: \"react-spa-project.appspot.com\",\r\n  messagingSenderId: \"108540880910\",\r\n  appId: \"1:108540880910:web:bdd88fe24c7b750ea5745f\",\r\n  measurementId: \"G-T1ZCWWZN39\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const auth = firebase.auth();\r\n\r\nexport default firebase;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    const { user } = this.props;\r\n    return (\r\n      <div className=\"container text-center\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-10 col-md-10 col-lg-8 col-xl-7\">\r\n            <h4 className=\"display-4 text-primary mt-3 mb-2\">Meeting Log</h4>\r\n            <p className=\"lead\">\r\n              This simple app creates meetings, allows people to check in, and\r\n              picks random users to award giveaways. It's a good example of a\r\n              Single Page Application which includes connection to a database\r\n              and routing. It's a practical way to learn{\" \"}\r\n              <a href=\"https://react.js\">React.js</a> with{\" \"}\r\n              <a href=\"https://firebase.google.com\">Firebase</a>.\r\n            </p>\r\n\r\n            {user == null && (\r\n              <div>\r\n                <Link to=\"/register\" className=\"btn btn-primary btn-sm mr-2\">\r\n                  Register\r\n                </Link>\r\n\r\n                <Link to=\"/login\" className=\"btn btn-primary btn-sm mr-2\">\r\n                  Log In\r\n                </Link>\r\n              </div>\r\n            )}\r\n\r\n            {user && (\r\n              <Link to=\"/meetings\" className=\"btn btn-primary btn-sm mr-2\">\r\n                Meetings\r\n              </Link>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nclass Welcome extends Component {\r\n  render() {\r\n    const { userName, logOutUser } = this.props;\r\n    return (\r\n      <div className=\"text-center mt-4\">\r\n        <span className=\"text-secondary font-weight-bold pl-1\">\r\n          Welcome {userName},\r\n        </span>\r\n        <Link\r\n          to=\"/login\"\r\n          className=\"text-primary font-weight-bold pl-1\"\r\n          onClick={e => logOutUser(e)}\r\n        >\r\n          log out\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Welcome;\r\n","import React, { Component } from \"react\";\r\nimport { FaUsers } from \"react-icons/fa\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    const { user, logOutUser } = this.props;\r\n\r\n    return (\r\n      <nav className=\"site-nav family-sans navbar navbar-expand navbar-dark bg-primary higher\">\r\n        <div className=\"container-fluid\">\r\n          <Link to=\"/\" className=\"navbar-brand\">\r\n            <FaUsers className=\"mr-1\" /> Meeting Log\r\n          </Link>\r\n          <div className=\"navbar-nav ml-auto\">\r\n            {user && (\r\n              <Link className=\"nav-item nav-link\" to=\"/meetings\">\r\n                meetings\r\n              </Link>\r\n            )}\r\n            {!user && (\r\n              <Link className=\"nav-item nav-link\" to=\"/login\">\r\n                log in\r\n              </Link>\r\n            )}\r\n            {!user && (\r\n              <Link className=\"nav-item nav-link\" to=\"/register\">\r\n                register\r\n              </Link>\r\n            )}\r\n            {user && (\r\n              <Link\r\n                className=\"nav-item nav-link\"\r\n                to=\"/login\"\r\n                onClick={e => logOutUser(e)}\r\n              >\r\n                log out\r\n              </Link>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\n\r\nclass FormError extends Component {\r\n  render() {\r\n    const { message } = this.props;\r\n    return <div className=\"col-12 alert alert-danger px-3\">{message}</div>;\r\n  }\r\n}\r\n\r\nexport default FormError;\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"./Firebase\";\r\nimport FormError from \"./FormError\";\r\nimport { navigate } from \"@reach/router\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errorMessage: null\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    const itemName = e.target.name;\r\n    const itemValue = e.target.value;\r\n\r\n    this.setState({ [itemName]: itemValue });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    var register = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(register.email, register.password)\r\n      .then(() => {\r\n        navigate(\"/meetings\");\r\n      })\r\n      .catch(e => {\r\n        if (e.message !== null) {\r\n          this.setState({ errorMessage: e.message });\r\n        } else {\r\n          this.setState({ errorMessage: null });\r\n        }\r\n      });\r\n\r\n    e.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"mt-3\" onSubmit={this.handleSubmit}>\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"card bg-light\">\r\n                <div className=\"card-body\">\r\n                  <h3 className=\"font-weight-light mb-3\">Log in</h3>\r\n                  {this.state.errorMessage !== null ? (\r\n                    <FormError message={this.state.errorMessage} />\r\n                  ) : null}\r\n                  <section className=\"form-group\">\r\n                    <label\r\n                      className=\"form-control-label sr-only\"\r\n                      htmlFor=\"Email\"\r\n                    >\r\n                      Email\r\n                    </label>\r\n                    <input\r\n                      required\r\n                      className=\"form-control\"\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Email\"\r\n                      value={this.state.email}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </section>\r\n                  <section className=\"form-group\">\r\n                    <input\r\n                      required\r\n                      className=\"form-control\"\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder=\"Password\"\r\n                      value={this.state.password}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </section>\r\n                  <div className=\"form-group text-right mb-0\">\r\n                    <button className=\"btn btn-primary\" type=\"submit\">\r\n                      Log in\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"./Firebase\";\r\nimport { GoTrashcan, GoListUnordered } from \"react-icons/go\";\r\nimport { navigate } from \"@reach/router\";\r\nimport { FaLink } from \"react-icons/fa\";\r\n\r\nclass MeetingList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  deleteMeetings = (e, meetingID) => {\r\n    e.preventDefault();\r\n\r\n    const ref = firebase\r\n      .database()\r\n      .ref(`meetings/${this.props.userID}/${meetingID}`);\r\n\r\n    ref.remove();\r\n  };\r\n\r\n  render() {\r\n    const { meetings } = this.props;\r\n    const myMeetings = meetings.map(item => (\r\n      <div className=\"list-group-item d-flex\" key={item.meetingID}>\r\n        <section className=\"btn-group align-self-center\" role=\"group\">\r\n          <button\r\n            className=\"btn btn-sm btn-outline-secondary\"\r\n            title=\"Delete Meeting\"\r\n            onClick={e => this.deleteMeetings(e, item.meetingID)}\r\n          >\r\n            <GoTrashcan />\r\n          </button>\r\n          <button\r\n            className=\"btn btn-sm btn-outline-secondary\"\r\n            title=\"Check In\"\r\n            onClick={() =>\r\n              navigate(`/checkin/${this.props.userID}/${item.meetingID}`)\r\n            }\r\n          >\r\n            <FaLink />\r\n          </button>\r\n          <button\r\n            className=\"btn btn-sm btn-outline-secondary\"\r\n            title=\"Attendees List\"\r\n            onClick={() =>\r\n              navigate(`/attendees/${this.props.userID}/${item.meetingID}`)\r\n            }\r\n          >\r\n            <GoListUnordered />\r\n          </button>\r\n        </section>\r\n\r\n        <section className=\"pl-3 text-left align-self-center\">\r\n          {item.meetingName}\r\n        </section>\r\n      </div>\r\n    ));\r\n\r\n    return <div>{myMeetings}</div>;\r\n  }\r\n}\r\n\r\nexport default MeetingList;\r\n","import React, { Component } from \"react\";\r\nimport MeetingList from \"./MeetingList\";\r\n\r\nclass Meeting extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      meetingName: \"\"\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    const itemName = e.target.name;\r\n    const itemValue = e.target.value;\r\n\r\n    this.setState({ [itemName]: itemValue });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.addMeeting(this.state.meetingName);\r\n    this.setState({ meetingName: \"\" });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container mt-4\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-8 text-center\">\r\n            <h1 className=\"font-weight-light\">Add a Meeting</h1>\r\n            <div className=\"card bg-light\">\r\n              <div className=\"card-body text-center\">\r\n                <form className=\"formgroup\" onSubmit={this.handleSubmit}>\r\n                  <div className=\"input-group input-group-lg\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"meetingName\"\r\n                      placeholder=\"Meeting name\"\r\n                      aria-describedby=\"buttonAdd\"\r\n                      value={this.state.meetingName}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-sm btn-info\"\r\n                        id=\"buttonAdd\"\r\n                      >\r\n                        +\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-11 col-md-6 text-center mt-2\">\r\n            <div className=\"card border-top-0 rounded-0\">\r\n              {this.props.meetings && this.props.meetings.length ? (\r\n                <div className=\"card-body py-2\">\r\n                  <h4 className=\"card-title font-weight-light m-0\">\r\n                    Your Meetings\r\n                  </h4>\r\n                </div>\r\n              ) : null}\r\n\r\n              {this.props.meetings && (\r\n                <div className=\"list-group list-group-flush\">\r\n                  <MeetingList\r\n                    meetings={this.props.meetings}\r\n                    userID={this.props.userID}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Meeting;\r\n","import React, { Component } from \"react\";\r\nimport FormError from \"./FormError\";\r\nimport firebase from \"./Firebase\";\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      displayName: \"\",\r\n      email: \"\",\r\n      passOne: \"\",\r\n      passTwo: \"\",\r\n      errorMessage: null\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    const itemName = e.target.name;\r\n    const itemValue = e.target.value;\r\n\r\n    this.setState({ [itemName]: itemValue }, () => {\r\n      if (this.state.passOne !== this.state.passTwo) {\r\n        this.setState({ errorMessage: \"Passwords do not matched\" });\r\n      } else {\r\n        this.setState({ errorMessage: null });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    var register = {\r\n      displayName: this.state.displayName,\r\n      email: this.state.email,\r\n      password: this.state.passOne\r\n    };\r\n\r\n    e.preventDefault();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(register.email, register.password)\r\n      .then(() => {\r\n        this.props.registerUser(register.displayName);\r\n      })\r\n      .catch(e => {\r\n        if (e.message !== null) {\r\n          this.setState({ errorMessage: e.message });\r\n        } else {\r\n          this.setState({ errorMessage: null });\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"mt-3\" onSubmit={this.handleSubmit}>\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-lg-8\">\r\n              <div className=\"card bg-light\">\r\n                <div className=\"card-body\">\r\n                  <h3 className=\"font-weight-light mb-3\">Register</h3>\r\n                  <div className=\"form-row\">\r\n                    {this.state.errorMessage !== null ? (\r\n                      <FormError message={this.state.errorMessage} />\r\n                    ) : null}\r\n                    <section className=\"col-sm-12 form-group\">\r\n                      <label\r\n                        className=\"form-control-label sr-only\"\r\n                        htmlFor=\"displayName\"\r\n                      >\r\n                        Display Name\r\n                      </label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        id=\"displayName\"\r\n                        placeholder=\"Display Name\"\r\n                        name=\"displayName\"\r\n                        required\r\n                        value={this.state.displayName}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </section>\r\n                  </div>\r\n                  <section className=\"form-group\">\r\n                    <label\r\n                      className=\"form-control-label sr-only\"\r\n                      htmlFor=\"email\"\r\n                    >\r\n                      Email\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      placeholder=\"Email Address\"\r\n                      required\r\n                      name=\"email\"\r\n                      value={this.state.email}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </section>\r\n                  <div className=\"form-row\">\r\n                    <section className=\"col-sm-6 form-group\">\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"password\"\r\n                        name=\"passOne\"\r\n                        placeholder=\"Password\"\r\n                        value={this.state.passOne}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </section>\r\n                    <section className=\"col-sm-6 form-group\">\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"password\"\r\n                        required\r\n                        name=\"passTwo\"\r\n                        placeholder=\"Repeat Password\"\r\n                        value={this.state.passTwo}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </section>\r\n                  </div>\r\n                  <div className=\"form-group text-right mb-0\">\r\n                    <button className=\"btn btn-primary\" type=\"submit\">\r\n                      Register\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"./Firebase\";\r\nimport { navigate } from \"@reach/router\";\r\n\r\nclass CheckIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      displayName: \"\",\r\n      email: \"\"\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    const itemName = e.target.name;\r\n    const itemValue = e.target.value;\r\n\r\n    this.setState({ [itemName]: itemValue });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const ref = firebase\r\n      .database()\r\n      .ref(`/meetings/${this.props.userID}/${this.props.meetingID}/attendees`);\r\n\r\n    ref.push({\r\n      attendeeName: this.state.displayName,\r\n      attendeeEmail: this.state.email,\r\n      star: false\r\n    });\r\n\r\n    navigate(`/attendees/${this.props.userID}/${this.props.meetingID}`);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"mt-3\" onSubmit={this.handleSubmit}>\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"card bg-light\">\r\n                <div className=\"card-body\">\r\n                  <h3 className=\"font-weight-light mb-3\">Check in</h3>\r\n                  <section className=\"form-group\">\r\n                    <label\r\n                      className=\"form-control-label sr-only\"\r\n                      htmlFor=\"displayName\"\r\n                    >\r\n                      Name\r\n                    </label>\r\n                    <input\r\n                      required\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      id=\"displayName\"\r\n                      name=\"displayName\"\r\n                      placeholder=\"Name\"\r\n                      value={this.state.displayName}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </section>\r\n                  <section className=\"form-group\">\r\n                    <label\r\n                      className=\"form-control-label sr-only\"\r\n                      htmlFor=\"Email\"\r\n                    >\r\n                      Email\r\n                    </label>\r\n                    <input\r\n                      required\r\n                      className=\"form-control\"\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Email\"\r\n                      value={this.state.email}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </section>\r\n                  <div className=\"form-group text-right mb-0\">\r\n                    <button className=\"btn btn-primary\" type=\"submit\">\r\n                      Check in\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CheckIn;\r\n","import React, { Component } from \"react\";\r\nimport { GoTrashcan, GoStar, GoMail } from \"react-icons/go\";\r\nimport firebase from \"./Firebase\";\r\n\r\nclass AttendeesList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  deleteAttendee = (e, meetingID, attendeeID) => {\r\n    e.preventDefault();\r\n\r\n    const adminUser = this.props.adminUser;\r\n\r\n    const ref = firebase\r\n      .database()\r\n      .ref(`/meetings/${adminUser}/${meetingID}/attendees/${attendeeID}`);\r\n\r\n    ref.remove();\r\n  };\r\n\r\n  toggleStar = (e, star, meetingID, attendeeID) => {\r\n    e.preventDefault();\r\n\r\n    const adminUser = this.props.adminUser;\r\n\r\n    const ref = firebase\r\n      .database()\r\n      .ref(`/meetings/${adminUser}/${meetingID}/attendees/${attendeeID}/star`);\r\n\r\n    if (star === undefined) {\r\n      ref.set(true);\r\n    } else {\r\n      ref.set(!star);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const admin = this.props.adminUser === this.props.userID ? true : false;\r\n    const { attendees } = this.props;\r\n    const myAttendees = attendees.map(item => (\r\n      <div\r\n        className=\"col-8 col-sm-6 col-md-4 col-lg-3 mb-2 p-0 px-1\"\r\n        key={item.attendeeID}\r\n      >\r\n        <div className=\"card\">\r\n          <div\r\n            className={\r\n              \"card-body px-3 py-2 d-flex align-items-center \" +\r\n              (admin ? \"\" : \"justify-content-center\")\r\n            }\r\n          >\r\n            {admin && (\r\n              <div className=\"btn-group pr-2\">\r\n                <button\r\n                  className={\r\n                    \"btn btn-sm \" +\r\n                    (item.star ? \"btn-info\" : \"btn-outline-secondary\")\r\n                  }\r\n                  title=\"Give user a star\"\r\n                  onClick={e =>\r\n                    this.toggleStar(\r\n                      e,\r\n                      item.star,\r\n                      this.props.meetingID,\r\n                      item.attendeeID\r\n                    )\r\n                  }\r\n                >\r\n                  <GoStar />\r\n                </button>\r\n                <a\r\n                  href={`mailto:${item.attendeeEmail}`}\r\n                  className=\"btn btn-sm btn-outline-secondary\"\r\n                  title=\"Mail Attendee\"\r\n                >\r\n                  <GoMail />\r\n                </a>\r\n                <button\r\n                  className=\"btn btn-sm btn-outline-secondary\"\r\n                  title=\"Delete Attendee\"\r\n                  onClick={e =>\r\n                    this.deleteAttendee(\r\n                      e,\r\n                      this.props.meetingID,\r\n                      item.attendeeID\r\n                    )\r\n                  }\r\n                >\r\n                  <GoTrashcan />\r\n                </button>\r\n              </div>\r\n            )}\r\n            <div>{item.attendeeName}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n    return <div className=\"row justify-content-center\">{myAttendees}</div>;\r\n  }\r\n}\r\n\r\nexport default AttendeesList;\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"./Firebase\";\r\nimport AttendeesList from \"./AttendeesList\";\r\nimport { FaUndo, FaRandom } from \"react-icons/fa\";\r\n\r\nclass Attandees extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      displayAttendees: [],\r\n      allAttendees: [],\r\n      searchQuery: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const ref = firebase\r\n      .database()\r\n      .ref(`meetings/${this.props.userID}/${this.props.meetingID}/attendees`);\r\n\r\n    ref.on(\"value\", snapshot => {\r\n      let attendees = snapshot.val();\r\n      let attendeesList = [];\r\n\r\n      for (let item in attendees) {\r\n        attendeesList.push({\r\n          attendeeID: item,\r\n          attendeeName: attendees[item].attendeeName,\r\n          attendeeEmail: attendees[item].attendeeEmail,\r\n          star: attendees[item].star\r\n        });\r\n      }\r\n\r\n      this.setState({\r\n        displayAttendees: attendeesList,\r\n        allAttendees: attendeesList\r\n      });\r\n    });\r\n  }\r\n\r\n  handleChange = e => {\r\n    const itemName = e.target.name;\r\n    const itemValue = e.target.value;\r\n\r\n    this.setState({ [itemName]: itemValue });\r\n  };\r\n\r\n  resetQuery() {\r\n    this.setState({\r\n      searchQuery: \"\",\r\n      displayAttendees: this.state.allAttendees\r\n    });\r\n  }\r\n\r\n  chooseRandom() {\r\n    const randomAttendee = Math.floor(\r\n      Math.random() * this.state.allAttendees.length\r\n    );\r\n    this.resetQuery();\r\n\r\n    this.setState({\r\n      displayAttendees: [this.state.allAttendees[randomAttendee]]\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const dataFilter = item =>\r\n      item.attendeeName\r\n        .toLowerCase()\r\n        .match(this.state.searchQuery.toLowerCase()) && true;\r\n\r\n    const filteredAttendees = this.state.displayAttendees.filter(dataFilter);\r\n\r\n    return (\r\n      <div className=\"container mt-4\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-8\">\r\n            <h1 className=\"font-weight-light text-center\">Attendees</h1>\r\n            <div className=\"card bg-light mb-4\">\r\n              <div className=\"card-body text-center\">\r\n                <div className=\"input-group input-group-lg\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"searchQuery\"\r\n                    value={this.state.searchQuery}\r\n                    placeholder=\"Search Attendees\"\r\n                    className=\"form-control\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <div className=\"input-group-append\">\r\n                    <button\r\n                      className=\"btn btn-sm btn-outline-info\"\r\n                      title=\"Pick a random attendee\"\r\n                      onClick={() => this.chooseRandom()}\r\n                    >\r\n                      <FaRandom />\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-sm btn-outline-info\"\r\n                      title=\"Reset search\"\r\n                      onClick={() => this.resetQuery()}\r\n                    >\r\n                      <FaUndo />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <AttendeesList\r\n          userID={this.props.userID}\r\n          adminUser={this.props.adminUser}\r\n          attendees={filteredAttendees}\r\n          meetingID={this.props.meetingID}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Attandees;\r\n","import React, { Component } from \"react\";\r\nimport { Router, navigate } from \"@reach/router\";\r\nimport firebase from \"./Firebase\";\r\n\r\nimport Home from \"./Home\";\r\nimport Welcome from \"./Welcome\";\r\nimport Navigation from \"./Navigation\";\r\nimport Login from \"./Login\";\r\nimport Meeting from \"./Meeting\";\r\nimport Register from \"./Register\";\r\nimport CheckIn from \"./CheckIn\";\r\nimport Attendees from \"./Attendees\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      user: null,\r\n      displayName: null,\r\n      userID: null,\r\n      meetings: [],\r\n      howManyMeetings: 0\r\n    };\r\n\r\n    this.registerUser = this.registerUser.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // const ref = firebase.database().ref(\"user\");\r\n\r\n    // ref.on(\"value\", spanshot => {\r\n    //   let FBUser = spanshot.val();\r\n    //   console.log(FBUser);\r\n    //   this.setState({ user: FBUser });\r\n    // });\r\n\r\n    firebase.auth().onAuthStateChanged(FBUser => {\r\n      if (FBUser) {\r\n        this.setState({\r\n          user: FBUser,\r\n          displayName: FBUser.displayName,\r\n          userID: FBUser.uid\r\n        });\r\n\r\n        const ref = firebase.database().ref(`meetings/` + FBUser.uid);\r\n\r\n        ref.on(\"value\", snaphot => {\r\n          let meetings = snaphot.val();\r\n          let meetingsList = [];\r\n\r\n          for (let item in meetings) {\r\n            meetingsList.push({\r\n              meetingID: item,\r\n              meetingName: meetings[item].meetingName\r\n            });\r\n          }\r\n\r\n          this.setState({\r\n            meetings: meetingsList,\r\n            howManyMeetings: meetingsList.length\r\n          });\r\n        });\r\n      } else {\r\n        this.setState({ user: null });\r\n      }\r\n    });\r\n  }\r\n\r\n  registerUser(userName) {\r\n    firebase.auth().onAuthStateChanged(FBUser => {\r\n      FBUser.updateProfile({\r\n        displayName: userName\r\n      }).then(() => {\r\n        this.setState({\r\n          user: FBUser,\r\n          displayName: FBUser.displayName,\r\n          userID: FBUser.uid\r\n        });\r\n        navigate(\"/meetings\");\r\n      });\r\n    });\r\n  }\r\n\r\n  logOutUser = e => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      user: null,\r\n      displayName: null,\r\n      userID: null\r\n    });\r\n\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        navigate(\"/login\");\r\n      });\r\n  };\r\n\r\n  addMeeting = meetingName => {\r\n    const ref = firebase.database().ref(`meetings/${this.state.user.uid}`);\r\n\r\n    ref.push({ meetingName: meetingName });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navigation user={this.state.user} logOutUser={this.logOutUser} />\r\n        {this.state.user && (\r\n          <Welcome\r\n            userName={this.state.displayName}\r\n            logOutUser={this.logOutUser}\r\n          />\r\n        )}\r\n\r\n        <Router>\r\n          <Home path=\"/\" user={this.state.user} />\r\n          <Login path=\"/login\" />\r\n          <Meeting\r\n            path=\"/meetings\"\r\n            addMeeting={this.addMeeting}\r\n            meetings={this.state.meetings}\r\n            userID={this.state.userID}\r\n          />\r\n          <CheckIn path=\"/checkin/:userID/:meetingID\" />\r\n          <Attendees\r\n            path=\"/attendees/:userID/:meetingID\"\r\n            adminUser={this.state.userID}\r\n          />\r\n          <Register path=\"/register\" registerUser={this.registerUser} />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}